<!DOCTYPE HTML>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>場景動作編輯頁面</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
</head>
<body onload="start()">
<link rel="stylesheet" type="text/css" href="/static/e_action.css"/>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script>
var param;
var init = $.parseJSON('<%-JSON.stringify(locals.init)%>');
var map = $.parseJSON('<%-JSON.stringify(locals.map)%>');
var item = $.parseJSON('<%-JSON.stringify(locals.item)%>');
var scenes = $.parseJSON('<%-JSON.stringify(locals.scenes)%>');
var step2;
var options = [];
var type;
var selection;
var source;


//make things sortable
function dragenter(e) {
    e.stopPropagation();
    $('.poked').removeClass('poked');
    $(this).addClass('poked');
    source.insertAfter($('.poked'));
}

function dragstart(e) {
    $('.chooseact').hide();
    $('.delete').show();
    e.stopPropagation();
    source = $(this);
    source.hide(5);
}

function dragend(e) {
    e.stopPropagation();
    $('.poked').removeClass('poked'); 
    source.show();
    $('.delete').hide();
    $('.chooseact').show();
    saveData();
}
function dropdelete(e) {
    if(confirm("真的要把動作方塊丟掉嗎:O")){
        source.remove();
        $('.poked').removeClass('poked'); 
        $('.delete').hide();
        $('.chooseact').show();
        saveData();
    }
}
function sortable() {
    //bind sortable
    $('.indent-block:not(:has(.indent-title))').prepend($('<div>').addClass('indent-title'));
    $('.expression').attr('draggable', 'true')
        .bind("dragstart", dragstart)
        .bind("dragend", dragend);
    $('.title, .expression, .indent-title').bind("dragenter", dragenter);
    $('input').attr('draggable', 'true').bind('dragstart', function(e) {
        return false;
    });
}

//get index by id
function getIndex(id, arr){
    id = parseInt(id);
    if(id<0 || isNaN(id)) return -1;
    for(let i in arr){
        if(id==arr[i].id){
            return i;
        }
    }
    return -1;
}

//find the first one that use this action
function findRoot(s_step2){
    if(s_step2.actions.length==0 || s_step2.actions[0].type!='use'){
        return s_step2;
    }
    var o_type = s_step2.actions[0].tname;
    var o_id = s_step2.actions[0].typeid;
    if(o_type=='init'){
       return findRoot(init.step2); 
    }
    else if(o_type=='map'){
        var index = getIndex(o_id, map);
        return findRoot(map[index].step2);
    }
    else if(o_type=='item'){
        var index = getIndex(o_id, item);
        return findRoot(item[index].step2);
    }
    else{
        var tmp = {};
        tmp.actions = [];
        tmp.isSelf = false;
        return tmp;
    }
}

//render actions
function bringData(type, selection){
    if(step2==null){
        $('.sthchecked').hide();
        $('.nochecked').show();
    }
    else{
        if(step2.isSelf){
            $('#tb2').removeClass('tab_active');
            $('#tb1').addClass('tab_active');
            $('#tabs-2').hide();
            $('#tabs-1').show();
            bringSelfData();
        }
        else{
            var o_step2 = findRoot(step2);
            $('#tb1').removeClass('tab_active');
            $('#tb2').addClass('tab_active');
            $('#tabs-1').hide();
            $('#tabs-2').show();
            bringOtherData(type, selection, o_step2);
        }
        $('.nochecked').hide();
        $('.sthchecked').show();
    }
}
function bringSelfData(){
    bringDiv($('.actions'), 'actions', step2.actions, false);
    bindEvents($('.actions'), 'actions');
}
function bringOtherData(type, selection, o_step2){
    prepareOption(type, selection);
    $('#tabs-2').find('select[name="useothers"]').empty();
    $('#tabs-2').find('select[name="useothers"]').append('<option value="" disabled selected hidden>===選擇動作===</option>');
    for(let i in options){
        if(step2.actions.length==0 || step2.actions[0].tname!=options[i].type || step2.actions[0].typeid!=options[i].id){
            $('#tabs-2').find('select[name="useothers"]').append($('<option>').val(i).text(options[i].name));
        }
        else{
            $('#tabs-2').find('select[name="useothers"]').append($('<option>').val(i).text(options[i].name).prop('selected', 'selected'));
        }
    }
    bringDiv($('.o_actions'), 'o_actions', o_step2.actions, true);
}
function bringDiv(where, typename, actions, readonly){
    var div = $('<div>').addClass(typename);
    if(typename == 'actions' || typename == 'o_actions'){
        div.append($('<div>').addClass('title').text('程式由此開始執行：'));
    }
    else if(typename == 'indent-block'){
        div.append($('<div>').addClass('indent-title'));
    }
    for(let i in actions){
        if(actions[i].type == "msg"){
            var $tmp = $('.Tdialog').clone();
            $tmp.appendTo(div).removeClass('Tdialog').addClass('dialog');
            $tmp.find('input[name="speaker"]').val(actions[i].speaker);
            $tmp.find('input[name="content"]').val(actions[i].msg);
        }
        else if(actions[i].type == "scene"){
            var $tmp = $('.Tchgscene').clone();
            $tmp.appendTo(div).removeClass('Tchgscene').addClass('chgscene');
            $tmp.find('option[value="'+actions[i].SID+'"]').prop('selected', 'selected');
        }
        else if(actions[i].type == "get"){
            var $tmp = $('.Tgetitem').clone();
            $tmp.appendTo(div).removeClass('Tgetitem').addClass('getitem');
            $tmp.find('.getinput').val(actions[i].item);
        }
        else if(actions[i].type == "lose"){
            var $tmp = $('.Tloseitem').clone();
            $tmp.appendTo(div).removeClass('Tloseitem').addClass('loseitem');
            $tmp.find('.loseinput').val(actions[i].item);
        }
        else if(actions[i].type == "flag"){
            var $tmp = $('.Tsetflag').clone();
            $tmp.appendTo(div).removeClass('Tsetflag').addClass('setflag');
            $tmp.find('.flaginput').val(actions[i].flag);
        }
        else if(actions[i].type == "ifelse"){
            var $tmp = $('.Tifelse').clone();
            $tmp.appendTo(div).removeClass('Tifelse').addClass('ifelse');
            for(let j in actions[i].cases){
                var $tmp1;
                if(j == 0){
                    $tmp1 = $('.Tif').clone();
                    $tmp1.appendTo($tmp).removeClass('Tif').addClass('if');
                    var condlen = actions[i].cases[j].cond.length
                    for(let k = 1; k < condlen; k++){
                        $tmp1.find('.conditions').append($('.Tcond').clone().removeClass('Tcond').addClass('cond'));
                    }
                    $tmp1.find('.cond').each(function(k){
                        $(this).find('.condtype').val(actions[i].cases[j].cond[k].type);
                        $(this).find('.ifvar').val(actions[i].cases[j].cond[k].value);
                    });
                }
                else if(j == actions[i].cases.length-1){
                    $tmp1 = $('.Telse').clone();
                    $tmp1.appendTo($tmp).removeClass('Telse').addClass('else');
                }
                else{
                    $tmp1 = $('.Telif').clone();
                    $tmp1.appendTo($tmp).removeClass('Telif').addClass('elif');
                    var condlen = actions[i].cases[j].cond.length
                    for(let k = 1; k < condlen; k++){
                        $tmp1.find('.conditions').append($('.Tcond').clone().removeClass('Tcond').addClass('cond'));
                    }
                    $tmp1.find('.cond').each(function(k){
                        $(this).find('.condtype').val(actions[i].cases[j].cond[k].type);
                        $(this).find('.ifvar').val(actions[i].cases[j].cond[k].value);
                    });
                }
                bringDiv($tmp1.find('.indent-block'), 'indent-block', actions[i].cases[j].act, readonly);
            }
        }
    }
    if(readonly && actions.length>0 && typename!='indent-block'){
        div.append($('<div>').addClass('o_div'));
    }
    where.replaceWith(div);
}

//prepare options
function prepareOption(type, id){
    options = [];
    options.push({
        type: 'init',
        id: 0,
        name: '自動執行'
    });
    for(let i in map){
        options.push({
            type: 'map',
            id: map[i].id,
            name: '區域-'+map[i].name
        });
    }
    for(let i in item){
        options.push({
            type: 'item',
            id: item[i].id,
            name: '圖片-'+item[i].name
        });
    }
    for(let i in options){
        if(type==options[i].type && id==options[i].id){
            options.splice(i, 1);
            break;
        }
    }
}

//transform div to data
function transData(where){
    var result = [];
    where.children().each(function(){
        if($(this).hasClass('dialog')){
            var speaker = $(this).find('input[name="speaker"]').val();
            var msg = $(this).find('input[name="content"]').val();
            result.push({
                type: "msg",
                speaker: speaker,
                msg: msg
            });
        }
        else if($(this).hasClass('chgscene')){
            var id = parseInt($(this).find('option:selected').val());
            result.push({
                type: "scene",
                SID: id
            });
        }
        else if($(this).hasClass('getitem')){
            var item = $(this).find('.getinput').val();
            result.push({
                type: "get",
                item: item
            });
        }
        else if($(this).hasClass('loseitem')){
            var item = $(this).find('.loseinput').val();
            result.push({
                type: "lose",
                item: item
            });
        }
        else if($(this).hasClass('setflag')){
            var flag = $(this).find('.flaginput').val();
            result.push({
                type: "flag",
                flag: flag
            });
        }
        else if($(this).hasClass('ifelse')){
            var ifres = {};
            ifres.type = "ifelse";
            var cases = [];
            $(this).children().each(function(){
                var acase = {}
                if($(this).hasClass('if') || $(this).hasClass('elif')){
                    var cond = [];
                    $(this).children('.conditions').children('.cond').each(function(){
                        var condtype = $(this).children('.condtype').val();
                        var ifvar = $(this).children('.ifvar').val();
                        //if(condtype!="" && ifvar!=""){
                            cond.push({
                                "type": condtype,
                                "value": ifvar
                            });
                        //}
                    });
                    acase.cond = cond;
                    acase.act = transData($(this).children('.indent-block'));
                }
                else if($(this).hasClass('else')){
                    acase.act = transData($(this).children('.indent-block'));
                }
                cases.push(acase);
            });
            ifres.cases = cases;
            result.push(ifres);
        }              
    });
    console.log(result);
    return result;
}

function saveData(){
    step2.actions = transData($('.actions'));
    bringData(type, selection);
}
function clearData(isSelf){
    step2.actions = [];
    step2.isSelf = isSelf;
}  

//bind Event
function bindEvents(where, typename){
    where.children().each(function(){
        if($(this).hasClass('dialog')){
            bindEvent($(this), 'msg');
        }
        else if($(this).hasClass('chgscene')){
            bindEvent($(this), 'scene');
        }
        else if($(this).hasClass('getitem')){
            bindEvent($(this), 'get');
        }
        else if($(this).hasClass('loseitem')){
            bindEvent($(this), 'lose');
        }
        else if($(this).hasClass('setflag')){
            bindEvent($(this), 'flag');
        }
        else if($(this).hasClass('ifelse')){
            bindEvent($(this), 'ifelse');
        }
    });
    if(typename=='actions'){
        sortable();
    }
}
function bindEvent(which, typename){
    if(typename=="msg"){
        which.find('.msginput').bind("change", function(){
            saveData();
        });
    }
    else if(typename=="scene"){
        which.find('.sceneinput').bind("change", function(){
            saveData();
        });
    }
    else if(typename=="get"){
        which.find('.getinput').bind("change", function(){
            saveData();
        });
    }
    else if(typename=="lose"){
        which.find('.loseinput').bind("change", function(){
            saveData();
        });
    }
    else if(typename=="flag"){
        which.find('.flaginput').bind("change", function(){
            saveData();
        });
    }
    else if(typename=="ifelse"){
        which.find('.condtype').each(function(){
            bindEvent($(this), 'condtype');
        });
        which.find('.ifvar').each(function(){
            bindEvent($(this), 'ifvar');
        });
        which.children('.if, .elif').children('.addcond').each(function(){
            bindEvent($(this), 'addcond');
        });
        bindEvent(which.children('.else').children('.addelif'), 'addelif');
        bindEvents(which.children('.if, .elif, .else').children('.indent-block'), 'indent-block');
    }
    else if(typename=="condtype"){
        which.bind("change", function(){
            saveData();
        });
    }
    else if(typename=="ifvar"){
        which.bind("change", function(){
            saveData();
        });
    }
    else if(typename=="addcond"){
        which.bind("click", function(){
            $tmp = $('.Tcond').clone();
            $tmp.removeClass('Tcond').addClass('cond').appendTo($(this).siblings('.conditions'));
            bindEvent($tmp.children('.condtype'), 'condtype');
            bindEvent($tmp.children('.ifvar'), 'ifvar');
        });
    }
    else if(typename=="addelif"){
        which.bind("click", function(){
            $tmp = $('.Telif').clone();
            $tmp.removeClass('Telif').addClass('elif').insertBefore($(this).closest('.else'));
            bindEvent($tmp.find('.addcond'), 'addcond');
            bindEvent($tmp.find('.condtype'), 'condtype');
            bindEvent($tmp.find('.ifvar'), 'ifvar');
        });
    }
}

//onload
function start(){       
    $('.delete').on("dragenter", function(e){
        e.preventDefault();
    }).on("dragover", function(e){
        e.preventDefault();
    }).on("drop", dropdelete);
       
    //check radio and select
    $('select').on("click", function(){
        $(this).parent().find('input:radio').prop('checked', true).trigger("click");
    });
    $('input:radio').on("click", function(){
        type = $('input:radio:checked').val();
        selection = parseInt($('input:radio:checked').closest('label').find('option:selected').val());
        if(type == 'init'){
            selection = 0;
            step2 = init.step2;
        }
        else if(type == 'map'){
            if(isNaN(selection)){
                step2 = null;
            }
            else{
                var index = getIndex(selection, map);
                step2 = map[index].step2;
            }
        }
        else if(type == 'item'){
            if(isNaN(selection)){
                step2 = null;
            }
            else{
                var index = getIndex(selection, item);
                step2 = item[index].step2;
            }
        }
        else{
            step2 = null;
        }
        bringData(type, selection);
    });
    
    //change tab
    $('#tb1').on( "click", function(e){
        if(!$('#tb1').hasClass('tab_active')){
            if(step2.actions.length>0){
                if(confirm("真的要換到另一個分頁嗎? 編輯過的動作會通通不見喔(´・ω・｀)")){
                    clearData(true);
                    bringData(type, selection);    
                }
                else return false;
            }
            else{
                clearData(true);
                bringData(type, selection);
            }
        }
        else return false;
    });
    $('#tb2').on( "click", function(e){
        if(!$('#tb2').hasClass('tab_active')){
            if(step2.actions.length>0){
                if(confirm("真的要換到另一個分頁嗎? 編輯過的動作會通通不見喔(´・ω・｀)")){
                    clearData(false);
                    bringData(type, selection);    
                }
                else return false;
            }
            else{
                clearData(false);
                bringData(type, selection);
            }
        }
        else return false;
    });
    
    //bind event to click buttons
    $('#dialog').on("click", function(){
        var $tmp = $('.Tdialog').clone();
        $tmp.appendTo('.actions').removeClass('Tdialog').addClass('dialog');
        bindEvent($tmp, 'msg');
        sortable();
    });
    $('#chgscene').on("click", function(){
        var $tmp = $('.Tchgscene').clone();
        $tmp.appendTo('.actions').removeClass('Tchgscene').addClass('chgscene');
        bindEvent($tmp, 'scene');
        sortable();
    });
    $('#getitem').on("click", function(){
        var $tmp = $('.Tgetitem').clone();
        $tmp.appendTo('.actions').removeClass('Tgetitem').addClass('getitem');
        bindEvent($tmp, 'get');
        sortable();
    });
    $('#loseitem').on("click", function(){
        var $tmp = $('.Tloseitem').clone();
        $tmp.appendTo('.actions').removeClass('Tloseitem').addClass('loseitem');
        bindEvent($tmp, 'lose');
        sortable();
    });
    $('#setflag').on("click", function(){
        var $tmp = $('.Tsetflag').clone();
        $tmp.appendTo('.actions').removeClass('Tsetflag').addClass('setflag');
        bindEvent($tmp, 'flag');
        sortable();
    });
    $('#ifelse').on("click", function(){
        var $tmp = $('.Tifelse').clone();
        var $vif = $('.Tif').clone();
        var $velse = $('.Telse').clone();
        $tmp.append($vif.removeClass('Tif').addClass('if'))
            .append($velse.removeClass('Telse').addClass('else'))
            .appendTo('.actions').removeClass('Tifelse').addClass('ifelse');
        bindEvent($tmp, 'ifelse');
        sortable();
    });
    
    //select others' actions
    $('#tabs-2').find('select[name="useothers"]').on("change", function(){
        var o_index = parseInt($(this).find('option:selected').val());
        step2.actions = [{
            type: 'use',
            tname: options[o_index].type,
            typeid: options[o_index].id
        }];
        bringData(type, selection);
    });
    
    //save data or not
    $('#save').on("click", function(){
        if(step2==null){
            window.location.href = '/scenes/'+<%= locals.GID %>;
            return;
        }
        else if(!step2.isSelf && isNaN(parseInt($('#tabs-2').find('option:selected').val()))){
            alert("請先選擇要使用的動作！");
            return;
        }
        if(step2.isSelf){
            saveData();
        }
        var data = {
            init: init,
            map: map,
            item: item
        };
        $.post('/e_action/<%=locals.GID%>/<%=locals.scene.SID%>', data, function(res){
            window.location.href = res.url;
        }, 'json');
    });
    $('#not_save').on("click", function(){
        if(confirm("真的不編輯惹嗎:O努力會付諸流水喔OUO")){
            window.location.href = '/scenes/'+<%= locals.GID %>;
        }
    });
}
</script>
<form method="post">
    <h4><b>設定動作</b><span class="title" style="margin-left:30px;font-size:15px;vertical-align:text-bottom;">場景：<%= locals.scene.name %></span></h4><hr>
    <ul><div class="circle">1</div>選擇要設定動作的事件：
        <div class="box">
            <label><input type=radio name="event" value="init">進入場景後自動執行</input></label><br>
            <label><input type=radio name="event" value="map">點擊區域：<select name="map">
                <option value="" disabled selected hidden>===選擇點擊區域===</option>
                <% for(let i in locals.map){ %>
                <option value="<%= locals.map[i].id %>"><%= locals.map[i].name %></option>
                <% } %>
            </select>
            </input></label><br>
            <label><input type=radio name="event" value="item">點擊圖片：<select name="item">
                <option value="" disabled selected hidden>===選擇點擊圖片===</option>
                <% for(let i in locals.item){ %>
                <option value="<%= locals.item[i].id %>"><%= locals.item[i].name %></option>
                <% } %>
            </select>
            </input></label><br>
        </div></ul>
    <ul><div class="circle">2</div>
        <div class="box">
            設定動作內容
                <div class="nochecked">↑尚未選擇要設定動作的事件</div>
                <div class="sthchecked">
                    <div id="tabs">
                        <div class="tab_container">
                            <div id="tb1" class="tab">自訂動作</div>
                            <div id="tb2" class="tab">使用現有動作</div>
                        </div><br>
                        <div id="tabs-1" style="display:none;">
                            <div class="actions"></div>
                            <div class="chooseact">
                                + 選擇動作種類：
                                <div class="button addbutton" id="dialog">顯示對話</div>
                                <div class="button addbutton" id="chgscene">切換場景</div>
                                <div class="button addbutton" id="getitem">取得物品</div>
                                <div class="button addbutton" id="loseitem">失去物品</div>
                                <div class="button addbutton" id="setflag">設定進度</div>
                                <div class="button addbutton" id="ifelse">條件判斷</div>
                            </div>
                            <div class="delete" style="display:none;">丟棄動作方塊</div>
                            <hr>
                        </div>
                        <div id="tabs-2" style="display:none;">
                            <div class="o_actions"><div class="o_div"></div></div>
                            <div class="chooseact">
                                直接使用同場景其他事件的動作：<select name="useothers">
                                <option value="" disabled selected hidden>===選擇動作===</option></select>
                            </div>
                            <hr>
                        </div>
                    </div>
                </div>
        </div>
    <div style="height:50px;width:600px;line-height:40px;">
        <div class="button savebutton" id="save">儲存</div>
        <div class="button savebutton" id="not_save">不編輯了喇</div>
    </div></ul>
</form>


<div style="display:none;">

<div class="expression Tdialog">
    <input type=text name="speaker" placeholder="人名" class="msginput"></input>說：<input type=text name="content" class="msginput"></input>
</div>
<div class="expression Tchgscene">
    切換場景到<select name="chgscene" class="sceneinput">
                <option value="" disabled selected hidden>===選擇場景===</option>
                <% for(let i in scenes){ if(locals.scene.SID!=scenes[i].SID){%>
                    <option value=<%= scenes[i].SID %>><%= scenes[i].name %></option>
                <%}}%>
            </select>
</div>
<div class="expression Tgetitem">
    取得物品：<input type=text name="get" placeholder="物品名稱" class="getinput"></input>
</div>
<div class="expression Tloseitem">
    失去物品：<input type=text name="lose" placeholder="物品名稱" class="loseinput"></input>
</div>
<div class="expression Tsetflag">
    完成進度：<input type=text name="flag" placeholder="進度名稱" class="flaginput"></input>
</div>
<div class="expression Tifelse"></div>
<div class="Tif">
    如果<span class="conditions">
        <span class="cond">
            <select name="if" class="condtype">
                <option value="" disabled selected hidden>===選擇條件===</option>
                <option value="item">擁有物品：</option>
                <option value="progress">完成進度：</option>
            </select>
            <input type=text name="ifvar" class="ifvar"></input>
        </span
    ></span>
    <div class="addcond">＋</div>
    <div class="indent-block"></div>
</div>
<div class="Telse">
    否則<div class="addelif">▼</div>
    <div class="indent-block"></div>
</div>
<div class="Telif">
    否則如果<span class="conditions">
        <span class="cond">
            <select name="if" class="condtype">
                <option value="" disabled selected hidden>===選擇條件===</option>
                <option value="item">擁有物品：</option>
                <option value="progress">完成進度：</option>
            </select>
            <input type=text name="ifvar" class="ifvar"></input>
        </span
    ></span>
    <div class="addcond">＋</div>
    <div class="indent-block"></div>
</div>
<span class="Tcond">
    <select name="if" class="condtype">
        <option value="" disabled selected hidden>===選擇條件===</option>
        <option value="item">擁有物品：</option>
        <option value="progress">完成進度：</option>
    </select>
    <input type=text name="ifvar" class="ifvar"></input>
</span>

</div>


</body>
</html>   